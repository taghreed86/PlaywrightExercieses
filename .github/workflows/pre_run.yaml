#name: "Before run nightly"
#on:
#  workflow_call:
#    inputs:
#      runs-on:
#        description: "The type of machine to run the job on e.g macOS-latest or ubuntu-latest"
#        required: true
#        type: string
#      os-name:
#        description: "`linux` or `darwin`"
#        required: true
#        type: string
#      timeout-minutes:
#        description: "The maximum number of minutes to let a job run before GitHub automatically cancels it"
#        required: true
#        type: number
#
#jobs:
#  Pre_tests:
#    runs-on: ${{ inputs.runs-on }}
#    timeout-minutes: ${{ inputs.timeout-minutes }}
#    steps:
#      - name: Install dependencies
#        run: |
#            python -m pip install --upgrade pip
#            pip install flake8 pytest
#            pip install pytest_dotenv
#            pip install pytest-reporter-html1
#
#      - name: Install aws cli
#        run: |
#          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#          unzip awscliv2.zip
#          sudo ./aws/install
#          fi
#          aws --version
#
#      - name: Install eksctl
#        run: |
#          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
#          sudo mv /tmp/eksctl /usr/local/bin
#          eksctl version
#          eksctl get clusters
#
#      - name: Install direnv
#        run: |
#          sudo apt install direnv
#          fi
#          direnv --version
#
#      - name: Install npm
#        run: |
#          sudo apt update
#          sudo apt install Node.js
#          sudo apt install npm
#          fi
#          Node.js -v && npm --version
#
#      - name: Install gsts
#        run: |
#          npm install --global gsts
#
#      - name: Install pre-commit
#        run: |
#          pip install pre-commit
#      - name: Install flux
#        run: |
#          curl --silent --location https://github.com/fluxcd/flux2/releases/download/v0.36.0/flux_0.36.0_${{ inputs.os-name }}_amd64.tar.gz | tar xz -C /tmp
#          sudo mv /tmp/flux /usr/local/bin
#          flux version --client
#
#      - name: Install aws-iam-authenticator
#        run: |
#          wget --no-verbose https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.7/aws-iam-authenticator_0.5.7_${{ inputs.os-name }}_amd64 -O /tmp/aws-iam-authenticator
#          chmod +x /tmp/aws-iam-authenticator
#          sudo mv /tmp/aws-iam-authenticator /usr/local/bin
#          aws-iam-authenticator version
#
#      - name: Install playwright
#        run: |
#          pip install pytest-playwright
#
#      - name : Install chromium
#        run: |
#          playwright install chromium
#
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#
##      - name: Setup management cluster
##        run: |
##          if [ ${{ inputs.management-cluster-kind }} = 'eks' ]; then
##            export CLUSTER_NAME=wego-enterprise-nightly-eks-${{ inputs.os-name }}
##            export CLUSTER_REGION=us-east-1
##
##          elif [ ${{ inputs.management-cluster-kind }} = 'gke' ]; then
##            export CLUSTER_NAME=wego-enterprise-nightly-gke-${{ inputs.os-name }}
##            export CLUSTER_REGION=us-central1-a
##
##          elif [ ${{ inputs.management-cluster-kind }} = 'kind' ]; then
##            export CLUSTER_NAME=management-${{ github.run_id }}-${{ github.run_number}}
##          fi
##
##          ./test/utils/scripts/mgmt-cluster-setup.sh  ${{ inputs.management-cluster-kind }} $(pwd) $CLUSTER_NAME $CLUSTER_REGION
##      - name: Run Acceptance tests
##        run: |
##          export CLUSTER_REPOSITORY=gitops-capi-template-${{ github.run_id }}-$(openssl rand -hex 8)
##
##          if [ ${{ env.GIT_PROVIDER }} == "gitlab" ] && [ ${{ env.GIT_PROVIDER_HOSTNAME }} != "gitlab.com" ]; then
##            export WEAVE_GITOPS_GIT_HOST_TYPES="${{ env.GIT_PROVIDER_HOSTNAME }}=gitlab"
##            export GITLAB_HOSTNAME=${{ env.GIT_PROVIDER_HOSTNAME }}
##          fi
##
##          ginkgo ${{ inputs.label-filter }} --v --output-dir=${{ env.ARTIFACTS_BASE_DIR }} --junit-report=${{ env.TEST_ARTIFACT_NAME }}.xml --timeout=2h test/acceptance/test/
##      - name: Store test results
##        if: ${{ always() }}
##        uses: actions/upload-artifact@v3.1.1
##        with:
##          name: ${{ env.TEST_ARTIFACT_NAME }}
##          path: ${{ env.ARTIFACTS_BASE_DIR }}
##          retention-days: 3
##      - name: Reset management cluster
##        if: ${{ always() }}
##        continue-on-error: true
##        run: |
##          if [ ${{ inputs.management-cluster-kind }} = "eks" ] || [ ${{ inputs.management-cluster-kind }} = "gke" ]; then
##            ./test/utils/scripts/wego-enterprise.sh reset
##          fi