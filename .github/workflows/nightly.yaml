name: nightly

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "30 22 * * *"

permissions:
  contents: read
jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install pytest_dotenv
        pip install pytest-reporter-html1
    - name: Install playwright and chromium
      run: |
        pip install pytest-playwright
        playwright install chromium
       
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: run tests
      run: |
        pytest -s -v --video=retain-on-failure --screenshot=only-on-failure --template=html1/index.html --report=test-results/report.html -o junit_family=xunit2 --junitxml=test-results/junit_tests_report.xml

    - name: Upload test report
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
          name: test-results
          path: test-results/junit_tests_report.xml

    - name: Download test artifacts
      uses: actions/download-artifact@v3.0.1
      with:
        name: junit_tests_report.xml
        path: test-results

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: test-results

    - name: Publish test report
      uses: dorny/test-reporter@v1.6.0
      id: test-report
      if: success() || failure()
      with:
#        name: Test Report
#        path: test-results/jest-*.xml
        artifact: test-results
        name: Tests Report
        path: test-results/junit_tests_report.xml
        reporter: java-junit

    - name: Notify Slack
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: C058RPVS5DZ
        payload: |
          {
          	"blocks": [
          		{
          			"type": "section",
          			"text": {
          				"type": "mrkdwn",
          				"text": "*Tests result: *${{steps.test-report.outputs.conclusion}}"
          			}
          		},
          		{
          			"type": "section",
          			"text": {
          				"type": "mrkdwn",
          				"text": "Passed :check:\t\t\tSkipped :arrow_right_hook:\t\t\tFailed :x:\t\t\tTime\n>${{steps.test-report.outputs.passed}} passed\t\t\t ${{steps.test-report.outputs.skipped}} skipped\t\t\t  ${{steps.test-report.outputs.failed}} failed\t\t\t ${{steps.test-report.outputs.time}} sec."
          			}
          		},
                {
          			"type": "divider"
          		},
          		{
          			"type": "section",
          			"text": {
          				"type": "mrkdwn",
          				"text": "*View result on Github:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          			}
          		}
          	]
          }
      if: always()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
